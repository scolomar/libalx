/******************************************************************************
 *	Copyright (C) 2020	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include "libalx/extra/cv/highgui/window.hpp"

#include <opencv2/core/mat.hpp>
#include <opencv2/highgui.hpp>

#include "libalx/base/compiler/restrict.hpp"


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* enum / struct / union ************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static prototypes ****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* global functions *****************************************************
 ******************************************************************************/
void	alx::CV::named_window		(const char *restrict win, int flags)
{
	cv::namedWindow(win, flags);
}

void	alx_cv_named_window		(const char *restrict win, int flags)
{
	alx::CV::named_window(win, flags);
}

void	alx::CV::destroy_all_windows	(void)
{
	cv::destroyAllWindows();
}

void	alx_cv_destroy_all_windows	(void)
{
	alx::CV::destroy_all_windows();
}

void	alx::CV::imshow			(const class cv::Mat *restrict img,
					 const char *restrict win, int delay)
{

	cv::imshow(win, *img);
	cv::waitKey(delay);
}

void	alx_cv_imshow			(const void *restrict img,
					 const char *restrict win, int delay)
{
	alx::CV::imshow((const class cv::Mat *)img, win, delay);
}


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static function definitions ******************************************
 ******************************************************************************/


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
