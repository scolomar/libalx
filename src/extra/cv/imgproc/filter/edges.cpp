/******************************************************************************
 *	Copyright (C) 2018	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include "libalx/extra/cv/imgproc/filter/edges.hpp"

#include <cstddef>

#include <opencv2/core/mat.hpp>
#include <opencv2/imgproc.hpp>


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/
#define ALX_CV_MAX_DERIVATIVE	(20)


/******************************************************************************
 ******* enum / struct / union ************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static prototypes ****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* global functions *****************************************************
 ******************************************************************************/
int	alx::CV::sobel		(class cv::Mat *img,
				 int dx, int dy, ptrdiff_t ksize)
{

	if (dx < 0 || dy < 0)
		return	1;
	if (dx > ALX_CV_MAX_DERIVATIVE || dy > ALX_CV_MAX_DERIVATIVE)
		return	1;
	if (!(ksize % 2)  ||  ksize < -1)
		return	1;
	cv::Sobel(*img, *img, -1, dx, dy, ksize, 1, 0, cv::BORDER_DEFAULT);

	return	0;
}

int	alx_cv_sobel		(void *img, int dx, int dy, ptrdiff_t ksize)
{
	return	alx::CV::sobel((class cv::Mat *)img, dx, dy, ksize);
}


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static function definitions ******************************************
 ******************************************************************************/


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
