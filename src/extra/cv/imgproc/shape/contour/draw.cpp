/******************************************************************************
 *	Copyright (C) 2018	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include "libalx/extra/cv/imgproc/shape/contour/draw.hpp"

#include <cstdint>

#include <vector>

#include <opencv2/core/mat.hpp>
#include <opencv2/imgproc.hpp>

#include "libalx/base/compiler/restrict.hpp"


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* enum / struct / union ************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static prototypes ****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* global functions *****************************************************
 ******************************************************************************/
void	alx::CV::draw_conts	(class cv::Mat *restrict img,
				 const class std::vector<
					class std::vector<
					class cv::Point_<
					int>>>  *restrict conts,
				 ptrdiff_t i)
{

	cv::drawContours(*img, *conts, i, cv::Scalar(UINT8_MAX), 1);
}

void	alx_cv_draw_conts	(void *restrict img, const void *restrict conts,
				 ptrdiff_t i)
{
	return	alx::CV::draw_conts((class cv::Mat *)img,
				  (const class std::vector<
					class std::vector<
					class cv::Point_<int>>>  *)conts, i);
}


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static function definitions ******************************************
 ******************************************************************************/


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
