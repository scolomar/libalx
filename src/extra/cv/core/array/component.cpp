/******************************************************************************
 *	Copyright (C) 2018	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include "libalx/extra/cv/core/array/component.hpp"

#include <cstddef>

#include <opencv2/core/mat.hpp>
#include <opencv2/core.hpp>


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* enum / struct / union ************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static prototypes ****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* global functions *****************************************************
 ******************************************************************************/
int	alx::CV::component	(class cv::Mat *img, ptrdiff_t cmp)
{
	const ptrdiff_t	chans	= img->channels();
	__extension__
	class cv::Mat	cmp_img[chans];

	if (chans < 2)
		return	1;
	if (cmp < 0 || cmp >= chans)
		return	1;

	cv::split(*img, cmp_img);
	img->release();
	cmp_img[cmp].copyTo(*img);

	for (ptrdiff_t i = 0; i < chans; i++)
		cmp_img[i].release();
	return	0;
}

int	alx_cv_component	(void *img, ptrdiff_t cmp)
{
	return	alx::CV::component((class cv::Mat *)img, cmp);
}


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static function definitions ******************************************
 ******************************************************************************/


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
