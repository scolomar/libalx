/******************************************************************************
 *	Copyright (C) 2018	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/extra/cv/core/img/img.hpp */

#if !defined(__cplusplus)
#warning	This header file should only be included in C++.  In C,	\
		include the header file of the same name and `.h`	\
		extension instead.
#endif


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include <cstddef>

#include <opencv2/core/base.hpp>

#include "libalx/base/compiler/restrict.hpp"


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
extern "C" {


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* C prototypes *********************************************************
 ******************************************************************************/
/* ----- Init */
[[gnu::nonnull]]
int	alx_cv_init_img		(void **img);
void	alx_cv_deinit_img	(void *img);
/* ----- Extract */
[[gnu::nonnull(1)]]
void	alx_cv_extract_imgdata	(const void *restrict img,
				 void **restrict data,
				 ptrdiff_t *restrict w,
				 ptrdiff_t *restrict h,
				 ptrdiff_t *restrict B_per_pix,
				 ptrdiff_t *restrict B_per_line,
				 int *restrict type);
/* ----- Copy */
[[gnu::nonnull]]
void	alx_cv_clone		(void *restrict clone,
				 const void *restrict img);


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
}	/* extern "C" */


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
namespace alx {
namespace CV {


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
/* ----- Init */
[[gnu::nonnull]]
int	init_img	(class cv::Mat **img);
void	deinit_img	(class cv::Mat *img);
/* ----- Extract */
[[gnu::nonnull(1)]]
void	extract_imgdata	(const class cv::Mat *restrict img,
			 void **restrict data,
			 ptrdiff_t *restrict w,
			 ptrdiff_t *restrict h,
			 ptrdiff_t *restrict B_per_pix,
			 ptrdiff_t *restrict B_per_line,
			 int *restrict type);
/* ----- Copy */
[[gnu::nonnull]]
void	clone		(class cv::Mat *restrict clone,
			 const class cv::Mat *restrict img);


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
}	/* namespace CV */
}	/* namespace alx */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
