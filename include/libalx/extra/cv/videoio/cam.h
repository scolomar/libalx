/******************************************************************************
 *	Copyright (C) 2020	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/extra/cv/videoio/cam.h */

#if defined(__cplusplus)
#warning	This header file should only be included in C.  In C++,	\
		include the header file of the same name and `.hpp`	\
		extension instead.
#endif


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include "libalx/extra/cv/types.h"


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
/* ----- alloc / free */
[[gnu::nonnull]] [[gnu::warn_unused_result]]
int	alx_cv_alloc_cam	(cam_s **cam);
[[gnu::nonnull]]
void	alx_cv_free_cam		(cam_s *cam);
/* ----- init / deinit */
[[gnu::nonnull(1)]]
void	alx_cv_init_cam		(cam_s *restrict cam,
				 const char *restrict dev, int index, int api);
[[gnu::nonnull]]
void	alx_cv_deinit_cam	(cam_s *cam);
/* ----- read */
[[gnu::nonnull]]
int	alx_cv_cam_read		(img_s *restrict img, cam_s *restrict cam);


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* inline ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
