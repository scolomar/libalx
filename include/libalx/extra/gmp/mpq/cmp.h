/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/extra/gmp/mpq/cmp.h */

#if defined(__cplusplus)
#warning	This header file should only be included in C.  In C++,	\
		include the header file of the same name and `.hpp`	\
		extension instead.
#endif


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include <stdint.h>

#include <gmp.h>

#include "libalx/base/assert/stdint.h"
#include "libalx/base/compiler/attribute.h"


/******************************************************************************
 ******* _Static_assert *******************************************************
 ******************************************************************************/
alx_Static_assert_stdint_types();


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
inline
int	alx_mpq_cmp_u64	(const mpq_t op1, uint64_t num2, uint64_t den2);
inline
int	alx_mpq_cmp_s64	(const mpq_t op1, int64_t num2, int64_t den2);


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/
#if defined(ALX_NO_PREFIX)
ALX_ALIAS_DECLARATION(mpq_cmp_u64, alx_mpq_cmp_u64);
ALX_ALIAS_DECLARATION(mpq_cmp_s64, alx_mpq_cmp_s64);
#endif


/******************************************************************************
 ******* inline ***************************************************************
 ******************************************************************************/
inline
int	alx_mpq_cmp_u64	(const mpq_t op1, uint64_t num2, uint64_t den2)
{
	return	mpq_cmp_ui(op1, num2, den2);
}

inline
int	alx_mpq_cmp_s64	(const mpq_t op1, int64_t num2, int64_t den2)
{
	return	mpq_cmp_si(op1, num2, den2);
}


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
