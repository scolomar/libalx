/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/base/assert/char.hpp */

#if !defined(__cplusplus)
#warning	This header file should only be included in C++.  In C,	\
		include the header file of the same name and `.h`	\
		extension instead.
#endif


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include <cassert>

#include "libalx/base/assert/assert.hpp"
#include "libalx/base/compiler/type.hpp"


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/
#define alx_Static_assert_char_signed()					\
	static_assert(alx_is_signed_type(char), "char != signed char")

#define alx_Static_assert_char_unsigned()				\
	static_assert(alx_is_unsigned_type(char), "char != unsigned char")

#define alx_assert_char_signed()					\
	alx_assert_msg(alx_is_signed_type(char), "BUG:   char != signed char")

#define alx_assert_char_unsigned()					\
	alx_assert_msg(alx_is_unsigned_type(char), "BUG:   char != unsigned char")


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
extern "C" {


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* C prototypes *********************************************************
 ******************************************************************************/


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/
#if defined(ALX_NO_PREFIX)
#define Static_assert_char_signed()	alx_Static_assert_char_signed()
#define Static_assert_char_unsigned()	alx_Static_assert_char_unsigned()
#define assert_char_signed()		alx_assert_char_signed()
#define assert_char_unsigned()		alx_assert_char_unsigned()
#endif


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
}	/* extern "C" */


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
namespace alx {


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
}	/* namespace alx */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
