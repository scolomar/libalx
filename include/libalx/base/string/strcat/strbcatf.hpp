/******************************************************************************
 *	Copyright (C) 2020	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/base/string/strcat/strbcatf.hpp */

#if !defined(__cplusplus)
#warning	This header file should only be included in C++.  In C,	\
		include the header file of the same name and `.h`	\
		extension instead.
#endif


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include "libalx/base/compiler/size.hpp"
#include "libalx/base/string/strcat/strscatfs.hpp"


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/
/*
 * [[gnu::nonnull(1, 3)]][[gnu::format(printf, 3, 4)]]
 * [[gnu::warn_unused_result]]
 * int	alx_sbprintf	(char buff[restrict], ptrdiff_t *restrict written,
 *			 const char *restrict fmt, ...);
 */
#define alx_strbcatf(buff, written, fmt, ...)				\
	alx_strscatfs((buff), (written), ARRAY_SIZE(buff),		\
					(fmt)  __VA_OPT__(,)  __VA_ARGS__)


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
extern "C" {


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* C prototypes *********************************************************
 ******************************************************************************/


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/
#if defined(ALX_NO_PREFIX)
#define strbcatf(buff, written, fmt, ...)				\
	alx_strbcatf((buff), (written), (fmt)  __VA_OPT__(,)  __VA_ARGS__)
#endif


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
}	/* extern "C" */


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
namespace alx {


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
}	/* namespace alx */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
