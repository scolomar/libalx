/******************************************************************************
 *	Copyright (C) 2020	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/alx/robot/ur/core/msg/robot_state.h */

#if defined(__cplusplus)
#warning	This header file should only be included in C.  In C++,	\
		include the header file of the same name and `.hpp`	\
		extension instead.
#endif


/******************************************************************************
 ******* include **************************************************************
 ******************************************************************************/
#include <stdint.h>

#include <sys/types.h>

#include "libalx/base/compiler/attribute.h"

#include "libalx/alx/robot/ur/core/core.h"


/******************************************************************************
 ******* define ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/
struct	Alx_UR_Robot_Msg_Hdr {
	uint64_t	timestamp;
	char		source;
	int8_t		type;
};

struct	Alx_UR_Robot_State_Pkg_Hdr {
	int32_t	sz;
	uint8_t	type;
};


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
[[gnu::nonnull]] [[gnu::warn_unused_result]]
int	alx_ur_robot_state_update	(struct Alx_UR *ur);
[[gnu::nonnull]]
void	alx_ur_parse_msg_robot_state	(struct Alx_UR *restrict ur,
					 ssize_t sz,
					 const unsigned char msg[static restrict sz],
					 const struct timespec *restrict ts);


/******************************************************************************
 ******* alias ****************************************************************
 ******************************************************************************/
#if defined(ALX_NO_PREFIX)
ALX_ALIAS_DECLARATION(ur_robot_state_update,	alx_ur_robot_state_update);
ALX_ALIAS_DECLARATION(ur_parse_msg_robot_state,	alx_ur_parse_msg_robot_state);
#endif


/******************************************************************************
 ******* inline ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
